Experiment 12 : Testing the navigational capabilities of the QTCB calculus in a indoor corridor environment with varied marker placements

Expected Results: 
*Succesful navigation of the corridor while avoiding collision with the walls.
*A highly discontinuous motion profile with jerky motion.
*A video log of the performed experiment.
*A collision case when moving too close to the walls.
*A collision case when markers are placed in a staggered manner on the opposing walls.


Experiment Variables:
*Initial position and orientation of the robot.
*Field of View of the camera.
*Lighting conditions of the corridor.
*Initial Position of the camera.
*Position of the markers relative to the fixed camera position.
*Position of the markers relative to each other.
*Battery voltage.
*Range of the wireless network.


Software Requirements:
*ROS Kinetic
*Python 2.7 or higher
*Qsr_lib package
*Qsr_nav package
*Mir_bringup package ?
*Mir_moveit_youbot_brsu_4 package ?
*Moveit_commander package ?


Hardware Requirements:
*Kuka Youbot
*PC capable of runnning ROS
*Remote joystick 
*External power supply 
*Aruco markers
*Asus Xtion Pro camera


Procedure:
*Place the markers on opposite walls of the corridor in a staggered manner.
*Verify that the emergency switch is not activated and the battery is connected to the robot.
*Ensure that the robot is powered on along with the PC and the Motors.
*Login to the robot using ssh.
*Launch the robot.launch file from the mir_bringup package.
*Launch the move_group.launch file from the mir_moveit_youbot_brsu_4 package.
*Run the moveit_commander_cmdline.py script from the moveit_commander package.
*Select arm_1 in the moveit_commander_cmdline.py and bring the arm to the default position using the go candle command.
*Use the joystick to position the camera roughly (R:3.877, P:-4.840, Y:-.202, degrees approximately) parellel to the robot base.
*Use the joystick to bring the robot to the designated starting position of the corridor.
*Launch the qtcb.launch file from the qsr_nav package.
*Record the results and data using rosbag record (and/or a handheld video recorder).
*Repeat the experiment from the opposite end of the corridor.
*Kill all ongoing processes and dock the robot back to its station.


Obtained Results and Analysis:
*The robot almost always fails irrespective of the starting position. The failure can be attributed to the irregular placement of the markers on the wall in most cases due to the staggered palcement no the markers(the markers cannot be placed to close to each other as this would mean they lie along the same axis and they cannot be placed too far away as then they are always out of the FOV).
*The motion profile is smooth and not jerky as previously thought.
*The robot tries to move towards the center of the corridor, but due to lack of any motion updates ends up moing diagonally towards the opposite wall and collides with it.
*Collision occurs when the robot is too close to either of the walls as the opposite set of markers goes out of the FOV of the camera and hence no update to the robot's motion can be made.
*It remains crucial to the algorithm that atleast two markers are detected simultaneously, when placed along the same axis or otherwise. In cases where two opposing markers cannot be observed simultaneously the collision is imminent.


Time:


Date: 08-12-2018


People Involved:
*Mihir Patil
*Santosh Thoduka
